{"version":3,"sources":["firebase.js","components/Nav.js","components/Page.js","components/OffensiveTerraformModuleCard.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Nav","props","size","React","useContext","ResponsiveContext","themeChecked","onThemeChange","Box","tag","direction","align","justify","width","alignSelf","gap","pad","left","right","vertical","RoutedAnchor","path","icon","Cloud","label","Text","Button","plain","href","target","rel","hover","horizontal","round","background","CheckBox","toggle","checked","onChange","Page","children","margin","top","OffensiveTerraformModuleCard","offensiveModule","Card","CardBody","Image","fit","src","image","alt","desc","provider","weight","name","CardFooter","Github","color","github","hoverIndicator","More","terraform","THEMES","grommet","dark","App","useState","themeName","setThemeName","setThemeChecked","data","setData","useEffect","a","db","firestore","collection","get","response","docs","map","doc","fetchData","Grommet","theme","flex","Heading","level","textAlign","Paragraph","wrap","index","key","role","aria-label","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6ac718a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDGR1t04Vea4k_51vqBbqWRMUYLZeJgy8o\",\n  authDomain: \"offensive-terraform.firebaseapp.com\",\n  databaseURL: \"https://offensive-terraform.firebaseio.com\",\n  projectId: \"offensive-terraform\",\n  storageBucket: \"offensive-terraform.appspot.com\",\n  messagingSenderId: \"556600256441\",\n  appId: \"1:556600256441:web:6a17fe02846490f8b87868\",\n  measurementId: \"G-DEWDK2DB9R\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  ResponsiveContext,\n  RoutedAnchor,\n  Button,\n  CheckBox,\n} from \"grommet\";\nimport { Cloud } from \"grommet-icons\";\n\nconst Nav = (props) => {\n  const size = React.useContext(ResponsiveContext);\n  const { themeChecked, onThemeChange } = props;\n\n  const handleThemeChange = () => {\n    onThemeChange(!themeChecked);\n  };\n\n  return (\n    <Box\n      tag=\"header\"\n      direction=\"row\"\n      align=\"center\"\n      justify=\"between\"\n      width=\"xlarge\"\n      alignSelf=\"center\"\n      gap=\"medium\"\n      pad={{ left: \"medium\", right: \"small\", vertical: \"small\" }}\n      {...props}\n    >\n      <RoutedAnchor\n        path=\"/\"\n        icon={<Cloud size=\"large\" />}\n        label={\n          size !== \"small\" && <Text size=\"xlarge\">Offensive Terraform</Text>\n        }\n      />\n      <Box direction=\"row\" gap=\"small\">\n        <Button\n          plain\n          href=\"https://registry.terraform.io/namespaces/offensive-terraform\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {({ hover }) => (\n            <Box\n              pad={{ vertical: \"small\", horizontal: \"medium\" }}\n              round=\"xlarge\"\n              background={hover ? \"active\" : \"control\"}\n            >\n              <Text>Modules</Text>\n            </Box>\n          )}\n        </Button>\n        <CheckBox toggle checked={themeChecked} onChange={handleThemeChange} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport Nav from \"./Nav\";\n\nconst Page = ({ children, background, themeChecked, onThemeChange }) => (\n  <Box pad=\"large\" background={background}>\n    <Box>\n      <Nav themeChecked={themeChecked} onThemeChange={onThemeChange} />\n      <Box margin={{ top: \"large\" }}>{children}</Box>\n    </Box>\n  </Box>\n);\n\nPage.propTypes = Box.propTypes;\n\nexport default Page;\n","import React from \"react\";\nimport { Box, Card, CardBody, CardFooter, Text, Image, Button } from \"grommet\";\nimport { Github, More } from \"grommet-icons\";\n\nconst OffensiveTerraformModuleCard = ({ offensiveModule }) => {\n  return (\n    <Card margin=\"small\" width=\"327px\" background=\"light-1\">\n      <CardBody>\n        <Image\n          width=\"327px\"\n          fit=\"cover\"\n          src={offensiveModule.image}\n          alt={offensiveModule.desc}\n        />\n        <Box direction=\"row\" gap=\"small\" margin=\"small\" align=\"center\">\n          <Image\n            width=\"50px\"\n            src={offensiveModule.provider === \"AWS\" ? \"./aws.png\" : \"\"}\n            alt={\n              offensiveModule.provider === \"AWS\"\n                ? \"Offensive Terraform Modules for AWS Cloud\"\n                : \"\"\n            }\n          />\n          <Box>\n            <Text size=\"small\" weight=\"bold\">\n              {offensiveModule.name}\n            </Text>\n          </Box>\n        </Box>\n        <Box margin=\"small\" gap=\"small\" align=\"center\">\n          <Text size=\"small\">{offensiveModule.desc}</Text>\n        </Box>\n      </CardBody>\n      <CardFooter\n        pad={{ horizontal: \"small\" }}\n        direction=\"row\"\n        justify=\"between\"\n        align=\"center\"\n        background=\"light-2\"\n      >\n        <Button\n          icon={<Github color=\"plain\" />}\n          href={offensiveModule.github}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          hoverIndicator\n        />\n        <Button\n          icon={<More color=\"brand\" />}\n          href={offensiveModule.terraform}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          hoverIndicator\n        />\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default OffensiveTerraformModuleCard;\n","import React from \"react\";\nimport { Box, Grommet, Heading, Paragraph } from \"grommet\";\nimport { grommet, dark } from \"grommet/themes\";\n\nimport firebase from \"./firebase\";\nimport Page from \"./components/Page\";\nimport OffensiveTerraformModuleCard from \"./components/OffensiveTerraformModuleCard\";\n\nconst THEMES = {\n  grommet,\n  dark,\n};\n\nfunction App() {\n  const [themeName, setThemeName] = React.useState(\"grommet\");\n  const [themeChecked, setThemeChecked] = React.useState(true);\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      const response = await db.collection(\"modules\").get();\n      setData(response.docs.map((doc) => doc.data()));\n    };\n    fetchData();\n  }, []);\n\n  const handleThemeChange = (checked) => {\n    if (checked) {\n      setThemeName(\"grommet\");\n    } else {\n      setThemeName(\"dark\");\n    }\n    setThemeChecked(checked);\n  };\n\n  return (\n    <Grommet theme={THEMES[themeName || \"grommet\"]}>\n      <Page themeChecked={themeChecked} onThemeChange={handleThemeChange}>\n        <Box flex align=\"center\" justify=\"center\">\n          <Heading level=\"1\" size=\"large\" textAlign=\"center\" margin=\"none\">\n            Offensive Terraform Modules\n          </Heading>\n          <Paragraph size=\"xxlarge\" textAlign=\"center\">\n            Automated multi step offensive attack modules with Infrastructure as\n            Code(IAC)\n          </Paragraph>\n        </Box>\n        <Box>\n          <Box flex direction=\"row\" justify=\"center\" wrap={true}>\n            {data.map((offensiveModule, index) => (\n              <OffensiveTerraformModuleCard\n                offensiveModule={offensiveModule}\n                key={index}\n              />\n            ))}\n          </Box>\n        </Box>\n        <Box>\n          <Heading level=\"1\" size=\"large\" textAlign=\"center\">\n            <span role=\"img\" aria-label=\"happy hacking\">\n              🤘\n            </span>\n            Happy Hacking!\n            <span role=\"img\" aria-label=\"happy hacking\">\n              🤩\n            </span>\n          </Heading>\n        </Box>\n      </Page>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}